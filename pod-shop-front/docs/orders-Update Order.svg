<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="643.44px" preserveAspectRatio="none" style="width:1016px;height:643px;background:#FFFFFF;" version="1.1" viewBox="0 0 1016 643" width="1016.4px" zoomAndPan="magnify"><defs/><g><rect height="22.2502" style="stroke:#00000000;stroke-width:0.84;fill:none;" width="89.04" x="460.32" y="8.4"/><text fill="#000000" font-family="sans-serif" font-size="11.76" font-weight="bold" lengthAdjust="spacing" textLength="80.64" x="464.52" y="23.9695">Update Order</text><rect fill="#DDDDDD" height="602.4375" style="stroke:#181818;stroke-width:0.42;" width="661.08" x="21.84" y="36.5302"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="105" x="299.88" y="47.0876">in-store-web-app</text><rect fill="#FFFFFF" height="40.0017" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="34.86" y="87.6012"/><rect fill="#FFFFFF" height="400.972" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="34.86" y="201.4655"/><rect fill="#FFFFFF" height="99.0626" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="429.66" y="127.6029"/><rect fill="#FFFFFF" height="198.386" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="429.66" y="271.7072"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="152.2238"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="352.2898"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="427.8323"/><rect height="499.7163" style="stroke:#000000;stroke-width:1.26;fill:none;" width="902.16" x="8.4" y="95.1612"/><rect height="237.5477" style="stroke:#000000;stroke-width:1.26;fill:none;" width="885.36" x="16.8" y="239.2655"/><rect height="63.7826" style="stroke:#000000;stroke-width:1.26;fill:none;" width="488.88" x="404.88" y="319.848"/><rect height="63.7826" style="stroke:#000000;stroke-width:1.26;fill:none;" width="423.36" x="404.88" y="395.3906"/><rect height="64.8834" style="stroke:#000000;stroke-width:1.26;fill:none;" width="596.82" x="16.8" y="488.5732"/><line style="stroke:#181818;stroke-width:0.42;fill:none;stroke-dasharray:5.0,5.0;" x1="38.64" x2="38.64" y1="79.2012" y2="609.9975"/><line style="stroke:#181818;stroke-width:0.42;fill:none;stroke-dasharray:5.0,5.0;" x1="433.44" x2="433.44" y1="79.2012" y2="609.9975"/><line style="stroke:#181818;stroke-width:0.42;fill:none;stroke-dasharray:5.0,5.0;" x1="637.56" x2="637.56" y1="79.2012" y2="609.9975"/><line style="stroke:#181818;stroke-width:0.42;fill:none;stroke-dasharray:5.0,5.0;" x1="782.04" x2="782.04" y1="79.2012" y2="609.9975"/><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="27.72" x="25.2" y="52.751"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="15.96" x="31.08" y="70.0005">UX</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="27.72" x="25.2" y="609.1575"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="15.96" x="31.08" y="626.407">UX</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="41.16" x="413.28" y="52.751"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="29.4" x="419.16" y="70.0005">Vuex</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="41.16" x="413.28" y="609.1575"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="29.4" x="419.16" y="626.407">Vuex</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="83.16" x="596.4" y="52.751"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="71.4" x="602.28" y="70.0005">OrderHelper</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="83.16" x="596.4" y="609.1575"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="71.4" x="602.28" y="626.407">OrderHelper</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="74.76" x="745.08" y="52.751"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="59.64" x="750.96" y="70.0005">od-so-api</text><rect fill="#E2E2F0" height="25.6102" rx="2.1" ry="2.1" style="stroke:#181818;stroke-width:0.42;" width="74.76" x="745.08" y="609.1575"/><text fill="#000000" font-family="sans-serif" font-size="11.76" lengthAdjust="spacing" textLength="59.64" x="750.96" y="626.407">od-so-api</text><rect fill="#FFFFFF" height="40.0017" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="34.86" y="87.6012"/><rect fill="#FFFFFF" height="400.972" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="34.86" y="201.4655"/><rect fill="#FFFFFF" height="99.0626" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="429.66" y="127.6029"/><rect fill="#FFFFFF" height="198.386" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="429.66" y="271.7072"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="152.2238"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="352.2898"/><rect fill="#FFFFFF" height="24.6209" style="stroke:#181818;stroke-width:0.84;" width="8.4" x="778.26" y="427.8323"/><line style="stroke:#000000;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="0" x2="1010.52" y1="88.4412" y2="88.4412"/><path d="M8.4,95.1612 L124.32,95.1612 L124.32,101.302 L115.92,109.702 L8.4,109.702 L8.4,95.1612 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.26;"/><rect fill="none" height="499.7163" style="stroke:#000000;stroke-width:1.26;" width="902.16" x="8.4" y="95.1612"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="78.12" x="21" y="106.5586">Update Order</text><polygon fill="#181818" points="419.58,124.2429,427.98,127.6029,419.58,130.9629,422.94,127.6029" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="39.06" x2="424.62" y1="127.6029" y2="127.6029"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="69.72" x="44.94" y="123.6195">Update Order</text><polygon fill="#181818" points="768.18,148.8637,776.58,152.2238,768.18,155.5837,771.54,152.2238" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="438.06" x2="773.22" y1="152.2238" y2="152.2238"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" text-decoration="underline" textLength="183.12" x="443.94" y="148.2403">PUT /locations/{locationId}/orders</text></a><polygon fill="#181818" points="447.3,173.4846,438.9,176.8446,447.3,180.2046,443.94,176.8446" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="442.26" x2="781.62" y1="176.8446" y2="176.8446"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="120.12" x="452.34" y="172.8612">UpsertOrdersResponse</text><polygon fill="#181818" points="52.5,198.1055,44.1,201.4655,52.5,204.8255,49.14,201.4655" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="47.46" x2="428.82" y1="201.4655" y2="201.4655"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="120.12" x="57.54" y="197.482">UpsertOrdersResponse</text><path d="M16.8,239.2655 L345.24,239.2655 L345.24,245.4063 L336.84,253.8063 L16.8,253.8063 L16.8,239.2655 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.26;"/><rect fill="none" height="237.5477" style="stroke:#000000;stroke-width:1.26;" width="885.36" x="16.8" y="239.2655"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="290.64" x="29.4" y="250.6629">$store.dispatch('orders/onUpdateOrder', response)</text><polygon fill="#181818" points="419.58,268.3472,427.98,271.7072,419.58,275.0672,422.94,271.7072" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="43.26" x2="424.62" y1="271.7072" y2="271.7072"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="267.96" x="49.14" y="267.7238">$store.dispatch('orders/onUpdateOrder', response)</text><line style="stroke:#181818;stroke-width:0.84;" x1="438.06" x2="473.34" y1="296.328" y2="296.328"/><line style="stroke:#181818;stroke-width:0.84;" x1="473.34" x2="473.34" y1="296.328" y2="307.248"/><line style="stroke:#181818;stroke-width:0.84;" x1="438.9" x2="473.34" y1="307.248" y2="307.248"/><polygon fill="#181818" points="447.3,303.888,438.9,307.248,447.3,310.608,443.94,307.248" style="stroke:#181818;stroke-width:0.84;"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="183.96" x="443.94" y="292.3446">$store.dispatch('orders/resetPage')</text><path d="M404.88,319.848 L610.68,319.848 L610.68,325.9889 L602.28,334.3889 L404.88,334.3889 L404.88,319.848 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.26;"/><rect fill="none" height="63.7826" style="stroke:#000000;stroke-width:1.26;" width="488.88" x="404.88" y="319.848"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="161.28" x="417.48" y="331.2455">Get skus for current location</text><text fill="#000000" font-family="sans-serif" font-size="9.24" font-weight="bold" lengthAdjust="spacing" textLength="266.28" x="623.28" y="330.4613">[$store.dispatch('skus/getSkus', { encryptedLocationId })]</text><polygon fill="#181818" points="768.18,348.9298,776.58,352.2898,768.18,355.6498,771.54,352.2898" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="438.06" x2="773.22" y1="352.2898" y2="352.2898"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" text-decoration="underline" textLength="174.72" x="443.94" y="348.3063">GET /locations/{locationId}/skus</text></a><polygon fill="#181818" points="447.3,373.5506,438.9,376.9106,447.3,380.2706,443.94,376.9106" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="442.26" x2="781.62" y1="376.9106" y2="376.9106"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="229.32" x="452.34" y="372.9272">SkuState SET_SKUS_PRODUCTS Array&lt;Sku&gt;</text><path d="M404.88,395.3906 L516.6,395.3906 L516.6,401.5315 L508.2,409.9315 L404.88,409.9315 L404.88,395.3906 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.26;"/><rect fill="none" height="63.7826" style="stroke:#000000;stroke-width:1.26;" width="423.36" x="404.88" y="395.3906"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="70.56" x="417.48" y="406.788">Load Orders</text><text fill="#000000" font-family="sans-serif" font-size="9.24" font-weight="bold" lengthAdjust="spacing" textLength="171.36" x="529.2" y="406.0038">[$store.dispatch('orders/getOrders')]</text><polygon fill="#181818" points="768.18,424.4723,776.58,427.8323,768.18,431.1923,771.54,427.8323" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="438.06" x2="773.22" y1="427.8323" y2="427.8323"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" text-decoration="underline" textLength="324.24" x="443.94" y="423.8489">GET /locations/{locationId}/orders?start_date=YYYY-MM-DD</text></a><polygon fill="#181818" points="447.3,449.0932,438.9,452.4532,447.3,455.8132,443.94,452.4532" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="442.26" x2="781.62" y1="452.4532" y2="452.4532"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="208.32" x="452.34" y="448.4698">OrderState SET_ORDERS Array&lt;Orders&gt;</text><polygon fill="#181818" points="52.5,466.7332,44.1,470.0932,52.5,473.4532,49.14,470.0932" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="47.46" x2="433.02" y1="470.0932" y2="470.0932"/><path d="M16.8,488.5732 L68.88,488.5732 L68.88,494.7141 L60.48,503.1141 L16.8,503.1141 L16.8,488.5732 " fill="#FFD700" style="stroke:#000000;stroke-width:1.26;"/><rect fill="none" height="64.8834" style="stroke:#000000;stroke-width:1.26;" width="596.82" x="16.8" y="488.5732"/><text fill="#000000" font-family="sans-serif" font-size="10.92" font-weight="bold" lengthAdjust="spacing" textLength="14.28" x="29.4" y="499.9706">alt</text><text fill="#000000" font-family="sans-serif" font-size="9.24" font-weight="bold" lengthAdjust="spacing" textLength="136.08" x="81.48" y="499.1864">[current location has Orders]</text><polygon fill="#181818" points="423.78,543.3766,432.18,546.7366,423.78,550.0966,427.14,546.7366" style="stroke:#181818;stroke-width:0.84;"/><line style="stroke:#181818;stroke-width:0.84;" x1="43.26" x2="428.82" y1="546.7366" y2="546.7366"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="280.56" x="49.14" y="517.0315">$store.commit('location/SET_CURRENT_LOCATION', {</text><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="209.16" x="52.5" y="529.8923">...this.currentLocation, has_orders: true</text><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="6.72" x="49.14" y="542.7532">})</text><path d="M437.64,517.6549 L437.64,538.6549 L600.6,538.6549 L600.6,526.0549 L592.2,517.6549 L437.64,517.6549 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.42;"/><path d="M592.2,517.6549 L592.2,526.0549 L600.6,526.0549 L592.2,517.6549 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.42;"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="145.32" x="442.68" y="532.4123">this should be in the action</text><line style="stroke:#181818;stroke-width:0.84;" x1="43.26" x2="78.54" y1="577.2375" y2="577.2375"/><line style="stroke:#181818;stroke-width:0.84;" x1="78.54" x2="78.54" y1="577.2375" y2="588.1575"/><line style="stroke:#181818;stroke-width:0.84;" x1="44.1" x2="78.54" y1="588.1575" y2="588.1575"/><polygon fill="#181818" points="52.5,584.7975,44.1,588.1575,52.5,591.5175,49.14,588.1575" style="stroke:#181818;stroke-width:0.84;"/><text fill="#000000" font-family="sans-serif" font-size="10.92" lengthAdjust="spacing" textLength="133.56" x="49.14" y="573.2541">go to Order Confirmation</text><line style="stroke:#000000;stroke-width:0.84;stroke-dasharray:2.0,2.0;" x1="0" x2="1010.52" y1="600.7575" y2="600.7575"/><!--MD5=[019b9587abbb5bc607f3f521a783d658]
@startuml
!procedure VuexApi($api, $apiLink, $resp, $respLink, $end="Api")
    Vuex -> $end ++: [[$apiLink $api]]
'    TODO how to escape chars in link?
'    return [[$respLink $resp]]
    return $resp
!endprocedure
!procedure LinkIt($text, $link)
    [[$link $text]]
!endprocedure

scale 0.7
    box "in-store-web-app"
    participant UX
    participant Vuex
    participant OrderHelper
    end box
    participant Api as "od-so-api "

    title Ordering Sequences

    == Initialization ==
    activate UX
    UX -> Api ++ : [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8 GET /users/me]]
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11: UserInfo]]
    UX -> Vuex ++ : $store.dispatch('location/getLocations')

    Vuex -> Api: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 GET /locations]]
    activate Api
'    TODO how to escape chars in link?
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 Array<Locations>]]
    Vuex -> Vuex: commit(locationsList)
    Vuex -> Vuex: LocationState setInitialLocation
    deactivate Vuex
    Vuex -> UX : initial location set

    newpage On location change
    UX ->  Vuex ++ : LocationState setInitialLocation
    group Show Unsaved Modal?
        Vuex ->  OrderHelper ++ : hasNewQtys
        return : true / false
        Vuex -> UX : show UnsavedOrdersModal
        deactivate Vuex
    end

    group Show Payment Failures modal?
        UX -> Vuex ++ : $store.dispatch('accountStatus/getPaymentFailures', encrypted_id)
        VuexApi("GET locations/${encryptedLocationId}/recent_payment_failures", "", "LocationPaymentFailures", "")
        return true / false
        deactivate Vuex
    end
'    return location set


/'
'/


    newpage One Time Orders (loading)
    activate UX
    UX -> Vuex ++ : $store.dispatch('orders/setPageToOrderGrid', \n\t { viewingStandingOrder, encryptedLocationId }\n)

    group Get last update order timestamp [$store.dispatch('orders/getLastUpdatedDateTime', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/orders/last_updated", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#343e67dbfe3842fdbcc12c4fe55b6905",  "OrderState SET_LAST_UPDATED timestamap", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bef8dcffc86a4c348abddf59b7a8594a")
    end

    group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/skus", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54", "SkuState SET_SKUS_PRODUCTS Array<Sku>", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c8ae870f13d74759b32a08aea196b828")
    end

    Vuex -> Vuex : "OrderState SELECT_DATE setDate"

    group Load Orders [$store.dispatch('getOrders', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/orders?start_date=YYYY-MM-DD", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4", "OrderState SET_ORDERS Array<Orders>", "")
    end
    deactivate Vuex

    newpage Review Order

    UX -> Vuex ++ : $store.dispatch('orders/mkInputPropsMapForWeeksOfOrdersOnHand')
    return InputProps


    group isRequestingMoreItems ?
        UX -> Vuex ++ : startOutOfStockFlow
        Vuex -> Api ++: LinkIt("POST /locations/{locationId}/oos/check", "https://www.notion.so/odeko/243e2d40ebb24ffc87f72b0ad169bc11?v=2249b95c7fdf45a2bda4136560ee6576&p=2f17504231bd474da1e6ab6bfcccf55d")

        alt#Gold #LightBlue Successful case
            Api -> Vuex : OOS_items.length === 0
            Vuex -> UX: go to order review
            deactivate Vuex
        else #Pink Failure:
            Api -> Vuex : OOS items.length > 0
            deactivate Api
            activate Vuex
            Vuex -> UX ++ : show OOS Modal
            deactivate Vuex
            UX -> UX : todo for OOS rec
            deactivate UX
        end
    end

    newpage Update Order
    group Update Order
        activate Api
        UX -> Vuex: Update Order
        deactivate UX
        activate Vuex
        VuexApi("PUT /locations/{locationId}/orders", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc", "UpsertOrdersResponse", "")
        Vuex -> UX ++ : UpsertOrdersResponse
        deactivate Vuex

        group $store.dispatch('orders/onUpdateOrder', response)
            UX -> Vuex ++ : $store.dispatch('orders/onUpdateOrder', response)
            Vuex -> Vuex: $store.dispatch('orders/resetPage')

            group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
                VuexApi("GET /locations/{locationId}/skus", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54", "SkuState SET_SKUS_PRODUCTS Array<Sku>", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c8ae870f13d74759b32a08aea196b828")
            end

            group Load Orders [$store.dispatch('orders/getOrders')]
                VuexApi("GET /locations/{locationId}/orders?start_date=YYYY-MM-DD", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4", "OrderState SET_ORDERS Array<Orders>", "")
            end
            return
        end

        alt#Gold current location has Orders
            UX -> Vuex : $store.commit('location/SET_CURRENT_LOCATION', {\n ...this.currentLocation, has_orders: true \n})
            note right: this should be in the action
        end

        UX -> UX : go to Order Confirmation
    end



    newpage Standing orders
    group display one time order grid
        UX -> Api: GET /locations/{locationId}/orders/for_standing_orders
        activate Api
        return
    end
    group update
        UX -> Api: PUT /locations/{locationId}/standing_orders/v2
        activate Api
        return
    end

@enduml

@startuml

scale 0.7
    box "in-store-web-app"
    participant UX
    participant Vuex
    participant OrderHelper
    end box
    participant Api as "od-so-api "

    title Ordering Sequences

    == Initialization ==
    activate UX
    UX -> Api ++ : [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8 GET /users/me]]
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11: UserInfo]]
    UX -> Vuex ++ : $store.dispatch('location/getLocations')

    Vuex -> Api: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 GET /locations]]
    activate Api
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 Array<Locations>]]
    Vuex -> Vuex: commit(locationsList)
    Vuex -> Vuex: LocationState setInitialLocation
    deactivate Vuex
    Vuex -> UX : initial location set

    newpage On location change
    UX ->  Vuex ++ : LocationState setInitialLocation
    group Show Unsaved Modal?
        Vuex ->  OrderHelper ++ : hasNewQtys
        return : true / false
        Vuex -> UX : show UnsavedOrdersModal
        deactivate Vuex
    end

    group Show Payment Failures modal?
        UX -> Vuex ++ : $store.dispatch('accountStatus/getPaymentFailures', encrypted_id)
            Vuex -> Api ++: [[ GET locations/${encryptedLocationId}/recent_payment_failures]]
    return LocationPaymentFailures
        return true / false
        deactivate Vuex
    end




    newpage One Time Orders (loading)
    activate UX
    UX -> Vuex ++ : $store.dispatch('orders/setPageToOrderGrid', \n\t { viewingStandingOrder, encryptedLocationId }\n)

    group Get last update order timestamp [$store.dispatch('orders/getLastUpdatedDateTime', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#343e67dbfe3842fdbcc12c4fe55b6905 GET /locations/{locationId}/orders/last_updated]]
    return OrderState SET_LAST_UPDATED timestamap
    end

    group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54 GET /locations/{locationId}/skus]]
    return SkuState SET_SKUS_PRODUCTS Array<Sku>
    end

    Vuex -> Vuex : "OrderState SELECT_DATE setDate"

    group Load Orders [$store.dispatch('getOrders', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4 GET /locations/{locationId}/orders?start_date=YYYY-MM-DD]]
    return OrderState SET_ORDERS Array<Orders>
    end
    deactivate Vuex

    newpage Review Order

    UX -> Vuex ++ : $store.dispatch('orders/mkInputPropsMapForWeeksOfOrdersOnHand')
    return InputProps


    group isRequestingMoreItems ?
        UX -> Vuex ++ : startOutOfStockFlow
        Vuex -> Api ++:     [[https://www.notion.so/odeko/243e2d40ebb24ffc87f72b0ad169bc11?v=2249b95c7fdf45a2bda4136560ee6576&p=2f17504231bd474da1e6ab6bfcccf55d POST /locations/{locationId}/oos/check]]

        alt#Gold #LightBlue Successful case
            Api -> Vuex : OOS_items.length === 0
            Vuex -> UX: go to order review
            deactivate Vuex
        else #Pink Failure:
            Api -> Vuex : OOS items.length > 0
            deactivate Api
            activate Vuex
            Vuex -> UX ++ : show OOS Modal
            deactivate Vuex
            UX -> UX : todo for OOS rec
            deactivate UX
        end
    end

    newpage Update Order
    group Update Order
        activate Api
        UX -> Vuex: Update Order
        deactivate UX
        activate Vuex
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc PUT /locations/{locationId}/orders]]
    return UpsertOrdersResponse
        Vuex -> UX ++ : UpsertOrdersResponse
        deactivate Vuex

        group $store.dispatch('orders/onUpdateOrder', response)
            UX -> Vuex ++ : $store.dispatch('orders/onUpdateOrder', response)
            Vuex -> Vuex: $store.dispatch('orders/resetPage')

            group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
                    Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54 GET /locations/{locationId}/skus]]
    return SkuState SET_SKUS_PRODUCTS Array<Sku>
            end

            group Load Orders [$store.dispatch('orders/getOrders')]
                    Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4 GET /locations/{locationId}/orders?start_date=YYYY-MM-DD]]
    return OrderState SET_ORDERS Array<Orders>
            end
            return
        end

        alt#Gold current location has Orders
            UX -> Vuex : $store.commit('location/SET_CURRENT_LOCATION', {\n ...this.currentLocation, has_orders: true \n})
            note right: this should be in the action
        end

        UX -> UX : go to Order Confirmation
    end



    newpage Standing orders
    group display one time order grid
        UX -> Api: GET /locations/{locationId}/orders/for_standing_orders
        activate Api
        return
    end
    group update
        UX -> Api: PUT /locations/{locationId}/standing_orders/v2
        activate Api
        return
    end

@enduml

PlantUML version 1.2022.5(Sat Apr 30 06:55:52 EDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>