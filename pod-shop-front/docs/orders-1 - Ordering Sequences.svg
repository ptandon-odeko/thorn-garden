<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="459px" preserveAspectRatio="none" style="width:1210px;height:459px;background:#FFFFFF;" version="1.1" viewBox="0 0 1210 459" width="1210px" zoomAndPan="magnify"><defs/><g><rect height="26.4883" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="181" x="510.5" y="10"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="171" x="515.5" y="28.5352">1 - Ordering Sequences</text><rect fill="#DDDDDD" height="410.082" style="stroke:#181818;stroke-width:0.5;" width="787" x="26" y="43.4883"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="125" x="357" y="56.0566">in-store-web-app</text><rect fill="#FFFFFF" height="305.7949" style="stroke:#181818;stroke-width:1.0;" width="10" x="41.5" y="104.2871"/><rect fill="#FFFFFF" height="136.2422" style="stroke:#181818;stroke-width:1.0;" width="10" x="511.5" y="227.5293"/><rect fill="#FFFFFF" height="29.3105" style="stroke:#181818;stroke-width:1.0;" width="10" x="926.5" y="168.9082"/><rect fill="#FFFFFF" height="29.3105" style="stroke:#181818;stroke-width:1.0;" width="10" x="926.5" y="256.8398"/><line style="stroke:#181818;stroke-width:0.5;fill:none;stroke-dasharray:5.0,5.0;" x1="46" x2="46" y1="94.2871" y2="419.082"/><line style="stroke:#181818;stroke-width:0.5;fill:none;stroke-dasharray:5.0,5.0;" x1="516" x2="516" y1="94.2871" y2="419.082"/><line style="stroke:#181818;stroke-width:0.5;fill:none;stroke-dasharray:5.0,5.0;" x1="759" x2="759" y1="94.2871" y2="419.082"/><line style="stroke:#181818;stroke-width:0.5;fill:none;stroke-dasharray:5.0,5.0;" x1="931" x2="931" y1="94.2871" y2="419.082"/><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="33" x="30" y="62.7988"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="19" x="37" y="83.334">UX</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="33" x="30" y="418.082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="19" x="37" y="438.6172">UX</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="492" y="62.7988"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="499" y="83.334">Vuex</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="492" y="418.082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="499" y="438.6172">Vuex</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="710" y="62.7988"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="717" y="83.334">OrderHelper</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="99" x="710" y="418.082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="85" x="717" y="438.6172">OrderHelper</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="887" y="62.7988"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="894" y="83.334">od-so-api</text><rect fill="#E2E2F0" height="30.4883" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="89" x="887" y="418.082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="71" x="894" y="438.6172">od-so-api</text><rect fill="#FFFFFF" height="305.7949" style="stroke:#181818;stroke-width:1.0;" width="10" x="41.5" y="104.2871"/><rect fill="#FFFFFF" height="136.2422" style="stroke:#181818;stroke-width:1.0;" width="10" x="511.5" y="227.5293"/><rect fill="#FFFFFF" height="29.3105" style="stroke:#181818;stroke-width:1.0;" width="10" x="926.5" y="168.9082"/><rect fill="#FFFFFF" height="29.3105" style="stroke:#181818;stroke-width:1.0;" width="10" x="926.5" y="256.8398"/><rect fill="#EEEEEE" height="3" style="stroke:#EEEEEE;stroke-width:1.0;" width="1203" x="0" y="124.9424"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1203" y1="124.9424" y2="124.9424"/><line style="stroke:#000000;stroke-width:1.0;" x1="0" x2="1203" y1="127.9424" y2="127.9424"/><rect fill="#EEEEEE" height="23.3105" style="stroke:#000000;stroke-width:2.0;" width="102" x="550.5" y="114.2871"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="84" x="556.5" y="130.8555">Initialization</text><polygon fill="#181818" points="914.5,164.9082,924.5,168.9082,914.5,172.9082,918.5,168.9082" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="51.5" x2="920.5" y1="168.9082" y2="168.9082"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" text-decoration="underline" textLength="95" x="58.5" y="164.166">GET /users/me</text></a><polygon fill="#181818" points="62.5,194.2188,52.5,198.2188,62.5,202.2188,58.5,198.2188" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="56.5" x2="930.5" y1="198.2188" y2="198.2188"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11:" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11:" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11:" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11:" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" text-decoration="underline" textLength="53" x="68.5" y="193.4766">UserInfo</text></a><polygon fill="#181818" points="499.5,223.5293,509.5,227.5293,499.5,231.5293,503.5,227.5293" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="51.5" x2="505.5" y1="227.5293" y2="227.5293"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="251" x="58.5" y="222.7871">$store.dispatch('location/getLocations')</text><polygon fill="#181818" points="914.5,252.8398,924.5,256.8398,914.5,260.8398,918.5,256.8398" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="521.5" x2="920.5" y1="256.8398" y2="256.8398"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" text-decoration="underline" textLength="93" x="528.5" y="252.0977">GET /locations</text></a><polygon fill="#181818" points="532.5,282.1504,522.5,286.1504,532.5,290.1504,528.5,286.1504" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="526.5" x2="930.5" y1="286.1504" y2="286.1504"/><a href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" target="_top" title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:actuate="onRequest" xlink:href="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:show="new" xlink:title="https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="13" lengthAdjust="spacing" text-decoration="underline" textLength="114" x="538.5" y="281.4082">Array&lt;Locations&gt;</text></a><line style="stroke:#181818;stroke-width:1.0;" x1="521.5" x2="563.5" y1="315.4609" y2="315.4609"/><line style="stroke:#181818;stroke-width:1.0;" x1="563.5" x2="563.5" y1="315.4609" y2="328.4609"/><line style="stroke:#181818;stroke-width:1.0;" x1="522.5" x2="563.5" y1="328.4609" y2="328.4609"/><polygon fill="#181818" points="532.5,324.4609,522.5,328.4609,532.5,332.4609,528.5,328.4609" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="137" x="528.5" y="310.7188">commit(locationsList)</text><line style="stroke:#181818;stroke-width:1.0;" x1="521.5" x2="563.5" y1="362.7715" y2="362.7715"/><line style="stroke:#181818;stroke-width:1.0;" x1="563.5" x2="563.5" y1="362.7715" y2="375.7715"/><line style="stroke:#181818;stroke-width:1.0;" x1="516.5" x2="563.5" y1="375.7715" y2="375.7715"/><polygon fill="#181818" points="526.5,371.7715,516.5,375.7715,526.5,379.7715,522.5,375.7715" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="198" x="528.5" y="358.0293">LocationState setInitialLocation</text><polygon fill="#181818" points="62.5,396.082,52.5,400.082,62.5,404.082,58.5,400.082" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="56.5" x2="515.5" y1="400.082" y2="400.082"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="114" x="68.5" y="395.3398">initial location set</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="0" x2="1203" y1="408.082" y2="408.082"/><!--MD5=[9d809eebd937602a0415544afb157e5d]
@startuml
!procedure VuexApi($api, $apiLink, $resp, $respLink, $end="Api")
    Vuex -> $end ++: [[$apiLink $api]]
'    TODO how to escape chars in link?
'    return [[$respLink $resp]]
    return $resp
!endprocedure
!procedure LinkIt($text, $link)
    [[$link $text]]
!endprocedure

scale 1
    box "in-store-web-app"
    participant UX
    participant Vuex
    participant OrderHelper
    end box
    participant Api as "od-so-api "

    title 1 - Ordering Sequences

    == Initialization ==
    activate UX
    UX -> Api ++ : [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8 GET /users/me]]
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11: UserInfo]]
    UX -> Vuex ++ : $store.dispatch('location/getLocations')

    Vuex -> Api: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 GET /locations]]
    activate Api
'    TODO how to escape chars in link?
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 Array<Locations>]]
    Vuex -> Vuex: commit(locationsList)
    Vuex -> Vuex: LocationState setInitialLocation
    deactivate Vuex
    Vuex -> UX : initial location set

    newpage On location change
    UX ->  Vuex ++ : LocationState setInitialLocation
    group Show Unsaved Modal?
        Vuex ->  OrderHelper ++ : hasNewQtys
        return : true / false
        Vuex -> UX : show UnsavedOrdersModal
        deactivate Vuex
    end

    group Show Payment Failures modal?
        UX -> Vuex ++ : $store.dispatch('accountStatus/getPaymentFailures', encrypted_id)
        VuexApi("GET locations/${encryptedLocationId}/recent_payment_failures", "", "LocationPaymentFailures", "")
        return true / false
        deactivate Vuex
    end
'    return location set


/'
'/


    newpage 2 - One Time Orders (loading)
    activate UX
    UX -> Vuex ++ : $store.dispatch('orders/setPageToOrderGrid', \n\t { viewingStandingOrder, encryptedLocationId }\n)

    group Get last update order timestamp [$store.dispatch('orders/getLastUpdatedDateTime', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/orders/last_updated", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#343e67dbfe3842fdbcc12c4fe55b6905",  "OrderState SET_LAST_UPDATED timestamap", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bef8dcffc86a4c348abddf59b7a8594a")
    end

    group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/skus", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54", "SkuState SET_SKUS_PRODUCTS Array<Sku>", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c8ae870f13d74759b32a08aea196b828")
    end

    Vuex -> Vuex : "OrderState SELECT_DATE setDate"

    group Load Orders [$store.dispatch('getOrders', { encryptedLocationId })]
        VuexApi("GET /locations/{locationId}/orders?start_date=YYYY-MM-DD", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4", "OrderState SET_ORDERS Array<Orders>", "")
    end
    deactivate Vuex

    newpage 3 - Review Order

    UX -> Vuex ++ : $store.dispatch('orders/mkInputPropsMapForWeeksOfOrdersOnHand')
    return InputProps


    group isRequestingMoreItems ?
        UX -> Vuex ++ : startOutOfStockFlow
        Vuex -> Api ++: LinkIt("POST /locations/{locationId}/oos/check", "https://www.notion.so/odeko/243e2d40ebb24ffc87f72b0ad169bc11?v=2249b95c7fdf45a2bda4136560ee6576&p=2f17504231bd474da1e6ab6bfcccf55d")

        alt#Gold #Pink Failure:
            Api -> Vuex : OOS items.length > 0
            Vuex -> UX ++ : show OOS Modal
            deactivate Vuex
            UX -> UX : todo for OOS rec
            deactivate UX
        else #LightBlue Successful case
            Api -> Vuex ++ : OOS_items.length === 0
            deactivate Api
            Vuex -> UX:
            deactivate Vuex
            UX -> UX: forward to order review


        end
'        ignore
    end


    newpage 4 - Update Order
    group Update Order
        activate Api
        UX -> Vuex: Update Order
        deactivate UX
        activate Vuex
        VuexApi("PUT /locations/{locationId}/orders", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc", "UpsertOrdersResponse", "")
        Vuex -> UX ++ : UpsertOrdersResponse
        deactivate Vuex

        group $store.dispatch('orders/onUpdateOrder', response)
            UX -> Vuex ++ : $store.dispatch('orders/onUpdateOrder', response)
            Vuex -> Vuex: $store.dispatch('orders/resetPage')

            group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
                VuexApi("GET /locations/{locationId}/skus", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54", "SkuState SET_SKUS_PRODUCTS Array<Sku>", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c8ae870f13d74759b32a08aea196b828")
            end

            group Load Orders [$store.dispatch('orders/getOrders')]
                VuexApi("GET /locations/{locationId}/orders?start_date=YYYY-MM-DD", "https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4", "OrderState SET_ORDERS Array<Orders>", "")
            end
            return
        end

        alt#Gold current location has Orders
            UX -> Vuex : $store.commit('location/SET_CURRENT_LOCATION', {\n ...this.currentLocation, has_orders: true \n})
            note right: could move to action for "Load Orders"?
        end

        UX -> UX : go to Order Confirmation
    end



    newpage 5- Standing orders
    group display one time order grid
        UX -> Api: GET /locations/{locationId}/orders/for_standing_orders
        activate Api
        return
    end
    group update
        UX -> Api: PUT /locations/{locationId}/standing_orders/v2
        activate Api
        return
    end

@enduml

@startuml

scale 1
    box "in-store-web-app"
    participant UX
    participant Vuex
    participant OrderHelper
    end box
    participant Api as "od-so-api "

    title 1 - Ordering Sequences

    == Initialization ==
    activate UX
    UX -> Api ++ : [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#e787aedcaeb446208bbb9f47ec69aed8 GET /users/me]]
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#33f156336f064c3ab30bfff452404f11: UserInfo]]
    UX -> Vuex ++ : $store.dispatch('location/getLocations')

    Vuex -> Api: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 GET /locations]]
    activate Api
    return [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#06cc27bea8744e3dbfce148f0dcf62e2 Array<Locations>]]
    Vuex -> Vuex: commit(locationsList)
    Vuex -> Vuex: LocationState setInitialLocation
    deactivate Vuex
    Vuex -> UX : initial location set

    newpage On location change
    UX ->  Vuex ++ : LocationState setInitialLocation
    group Show Unsaved Modal?
        Vuex ->  OrderHelper ++ : hasNewQtys
        return : true / false
        Vuex -> UX : show UnsavedOrdersModal
        deactivate Vuex
    end

    group Show Payment Failures modal?
        UX -> Vuex ++ : $store.dispatch('accountStatus/getPaymentFailures', encrypted_id)
            Vuex -> Api ++: [[ GET locations/${encryptedLocationId}/recent_payment_failures]]
    return LocationPaymentFailures
        return true / false
        deactivate Vuex
    end




    newpage 2 - One Time Orders (loading)
    activate UX
    UX -> Vuex ++ : $store.dispatch('orders/setPageToOrderGrid', \n\t { viewingStandingOrder, encryptedLocationId }\n)

    group Get last update order timestamp [$store.dispatch('orders/getLastUpdatedDateTime', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#343e67dbfe3842fdbcc12c4fe55b6905 GET /locations/{locationId}/orders/last_updated]]
    return OrderState SET_LAST_UPDATED timestamap
    end

    group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54 GET /locations/{locationId}/skus]]
    return SkuState SET_SKUS_PRODUCTS Array<Sku>
    end

    Vuex -> Vuex : "OrderState SELECT_DATE setDate"

    group Load Orders [$store.dispatch('getOrders', { encryptedLocationId })]
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4 GET /locations/{locationId}/orders?start_date=YYYY-MM-DD]]
    return OrderState SET_ORDERS Array<Orders>
    end
    deactivate Vuex

    newpage 3 - Review Order

    UX -> Vuex ++ : $store.dispatch('orders/mkInputPropsMapForWeeksOfOrdersOnHand')
    return InputProps


    group isRequestingMoreItems ?
        UX -> Vuex ++ : startOutOfStockFlow
        Vuex -> Api ++:     [[https://www.notion.so/odeko/243e2d40ebb24ffc87f72b0ad169bc11?v=2249b95c7fdf45a2bda4136560ee6576&p=2f17504231bd474da1e6ab6bfcccf55d POST /locations/{locationId}/oos/check]]

        alt#Gold #Pink Failure:
            Api -> Vuex : OOS items.length > 0
            Vuex -> UX ++ : show OOS Modal
            deactivate Vuex
            UX -> UX : todo for OOS rec
            deactivate UX
        else #LightBlue Successful case
            Api -> Vuex ++ : OOS_items.length === 0
            deactivate Api
            Vuex -> UX:
            deactivate Vuex
            UX -> UX: forward to order review


        end
    end


    newpage 4 - Update Order
    group Update Order
        activate Api
        UX -> Vuex: Update Order
        deactivate UX
        activate Vuex
            Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#14df1b158feb4a178dc234d225e70dbc PUT /locations/{locationId}/orders]]
    return UpsertOrdersResponse
        Vuex -> UX ++ : UpsertOrdersResponse
        deactivate Vuex

        group $store.dispatch('orders/onUpdateOrder', response)
            UX -> Vuex ++ : $store.dispatch('orders/onUpdateOrder', response)
            Vuex -> Vuex: $store.dispatch('orders/resetPage')

            group Get skus for current location  [$store.dispatch('skus/getSkus', { encryptedLocationId })]
                    Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#bfbfe5d95b4f4c9abdd2776e40855e54 GET /locations/{locationId}/skus]]
    return SkuState SET_SKUS_PRODUCTS Array<Sku>
            end

            group Load Orders [$store.dispatch('orders/getOrders')]
                    Vuex -> Api ++: [[https://www.notion.so/odeko/SO-API-api-docs-2f17504231bd474da1e6ab6bfcccf55d#c7da1cdbc409434cab8dd3945f7111b4 GET /locations/{locationId}/orders?start_date=YYYY-MM-DD]]
    return OrderState SET_ORDERS Array<Orders>
            end
            return
        end

        alt#Gold current location has Orders
            UX -> Vuex : $store.commit('location/SET_CURRENT_LOCATION', {\n ...this.currentLocation, has_orders: true \n})
            note right: could move to action for "Load Orders"?
        end

        UX -> UX : go to Order Confirmation
    end



    newpage 5- Standing orders
    group display one time order grid
        UX -> Api: GET /locations/{locationId}/orders/for_standing_orders
        activate Api
        return
    end
    group update
        UX -> Api: PUT /locations/{locationId}/standing_orders/v2
        activate Api
        return
    end

@enduml

PlantUML version 1.2022.5(Sat Apr 30 06:55:52 EDT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>